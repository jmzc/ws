<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jmzc</groupId>
  <artifactId>ws</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ws</name>
  <packaging>war</packaging>
  
  <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--  <jaxws.plugin.version>2.2</jaxws.plugin.version>   -->
        <javaee6.web.spec.version>2.0.0.Final</javaee6.web.spec.version>
  </properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-6.0</artifactId>
				<version>${javaee6.web.spec.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
   <dependencies>

	<!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
	<dependency>
		<groupId>javax.enterprise</groupId>
		<artifactId>cdi-api</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- Import the JAX-WS API, we use provided scope as the API is included in JBoss AS 7 -->
	<dependency>
		<groupId>org.jboss.spec.javax.xml.ws</groupId>
		<artifactId>jboss-jaxws-api_2.2_spec</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss AS 7 -->
	<dependency>
		<groupId>org.jboss.spec.javax.ws.rs</groupId>
		<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
		<scope>provided</scope>
	</dependency>

   <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>2.6.0</version>
   </dependency>
   
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.0.1</version>
	</dependency>

	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.21</version>
	</dependency>
</dependencies>

  <build>
    <plugins>

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>2.3.2</version>
		<configuration>
			<source>1.6</source>
			<target>1.6</target> 
			<!--  
			 <excludes>
                   <exclude>**/client/*.java</exclude>
             </excludes>
            -->
		</configuration>

		<!--  
		<executions>
			<execution>
				<id>compile</id>
				<goals>
					<goal>compile</goal>
				</goals>
				<phase>initialize</phase>
			</execution>
		</executions>
		-->
	</plugin>
	
	<!-- 
		project.build.sourceDirectory
		project.build.scriptSourceDirectory
		project.build.testSourceDirectory
		project.build.outputDirectory
		project.build.testOutputDirectory
		project.build.directory
	 -->
	<!--  http://jax-ws-commons.java.net/jaxws-maven-plugin -->
 
<!-- 	<plugin> -->
<!-- 		<groupId>org.jvnet.jax-ws-commons</groupId> -->
<!-- 		<artifactId>jaxws-maven-plugin</artifactId> -->
<!-- 		<version>2.1</version> -->
<!-- 		<executions> -->
<!-- 			<execution> -->
<!-- 				<id>wsgen</id> -->
<!-- 				<goals> -->
<!-- 					 Reads a JAX-WS service endpoint implementation class and generates all of the portable artifacts for a JAX-WS web service.  -->
<!-- 					 Default: process-classes -->
<!-- 					<goal>wsgen</goal> -->
<!-- 				</goals> -->
<!-- 				<phase>generate-sources</phase> -->
<!-- 				<configuration> -->
<!-- 					<sei>com.jmzc.server.TestEndPoint</sei> -->
<!-- 					<genWsdl>true</genWsdl> -->
<!-- 					<keep>true</keep> -->
<!-- 				</configuration> -->
<!-- 			</execution> -->
<!-- 			<execution> -->
<!-- 				<id>wsimport</id> -->
<!-- 				<goals> -->
<!-- 					 Parses wsdl and binding files and generates Java code needed to access it. -->
<!-- 					  Default: generate-sources -->
<!-- 					 <goal>wsimport</goal> -->
<!-- 				</goals> -->
<!-- 				<phase>generate-sources</phase> -->
<!-- 				<configuration> -->
<!-- 					<packageName>com.jmzc.client</packageName> -->
<!-- 					<keep>true</keep> -->
<!-- 					<sourceDestDir>${project.build.sourceDirectory}</sourceDestDir> -->
<!-- 					<wsdlDirectory>${project.build.directory}/generated-sources/wsdl</wsdlDirectory> -->
<!-- 				</configuration> -->
<!-- 			</execution> -->
<!-- 		</executions> -->
<!-- 	</plugin> -->

	
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-war-plugin</artifactId>
		<version>2.1.1</version>
		<configuration>
          <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
	</plugin>
            
	<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
	<!-- To use, set the JBOSS_HOME environment variable and run: package jboss-as:deploy -->
	<plugin>
		<groupId>org.jboss.as.plugins</groupId>
		<artifactId>jboss-as-maven-plugin</artifactId>
		<version>7.1.1.Final</version>
	</plugin>
   </plugins>
     
    <!--  Metadata -->
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.
    		Define how m2e maps information from project pom.xml file to Eclipse workspace project configuration and behaviour during Eclipse workspace build.
    		-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    								org.jvnet.jax-ws-commons
    								</groupId>
    								<artifactId>
    									jaxws-maven-plugin
    								</artifactId>
    								<versionRange>[2.1,)</versionRange>
    								<goals>
    									<goal>wsimport</goal>
    									<goal>wsgen</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>    

</project>